{"version":3,"file":"static/js/303.8c3d65da.chunk.js","mappings":"2PAGaA,EAAYC,EAAAA,EAAAA,GAAH,mdAeTC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0CAITG,EAAWH,EAAAA,EAAAA,IAAH,sFAMRI,EAAcJ,EAAAA,EAAAA,IAAH,wHAOXK,EAAYL,EAAAA,EAAAA,GAAH,yIAQTM,EAAeN,EAAAA,EAAAA,KAAH,mEAKZO,EAAcP,EAAAA,EAAAA,KAAH,mEAKXQ,EAAUR,EAAAA,EAAAA,IAAH,6C,mBCvCL,SAASS,EAAT,GAMX,IALFC,EAKC,EALDA,GACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,MACAC,EACC,EADDA,aAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,IAAIC,KAAKN,GAE7B,OACE,SAACb,EAAD,CAAWW,GAAIA,EAAf,UACE,UAACT,EAAD,CAAWkB,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMN,GAA/C,WACE,SAACZ,EAAD,CACEmB,IACEX,EAAW,yCAC2BA,GAClCY,EAENC,IAAKX,KAEP,UAACT,EAAD,YACE,SAACC,EAAD,UACGQ,KAEH,UAACP,EAAD,4BAEE,kBACkB,IAAjBM,EAAqBK,EAAYQ,qBAAuB,cAE3D,UAAClB,EAAD,2BAEE,SAACC,EAAD,UAA2B,IAAjBM,EAAqBA,EAAe,uBC7CnD,IAAMY,EAAa1B,EAAAA,EAAAA,GAAH,wR,SCER,SAAS2B,EAAT,GAAuC,IAAdC,EAAa,EAAbA,UACtC,OACE,SAACF,EAAD,UACGE,EAAUC,KAAI,gBAAGnB,EAAH,EAAGA,GAAOoB,GAAV,mBACb,SAACrB,GAAD,QAAoBC,GAAIA,GAAQoB,GAAhBpB,U,oECNXqB,E,QAAY/B,EAAAA,GAAH,qL,SCCP,SAASgC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,SAACF,EAAD,UAAYE,M,0ICEN,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAAQ,OAAIJ,EAAUI,EAASC,KAAKC,cAC9D,KAGD,iCACE,SAAC,IAAD,CAAaV,KAAK,mBACjBG,IAAU,SAAC,IAAD,CAAeR,UAAWQ,IACpCA,GAA4B,IAAlBA,EAAOQ,SAChB,SAAC,EAAAC,YAAD,WACE,UAAC,EAAAC,YAAD,8CACiC,kBADjC,mD,kICjBGD,EAAc7C,EAAAA,EAAAA,IAAH,oIAQX8C,EAAc9C,EAAAA,EAAAA,EAAH,+G","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/PageHeading/PageHeading.slyled.jsx","components/PageHeading/PageHeading.jsx","views/HomePageView/HomePageView.jsx","views/HomePageView/HomePageView.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  overflow: hidden;\n  color: #ffffff;\n  background: rgb(131,58,180);\n  background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);\n    0px 1px 1px 0px rgba(237, 70, 47, 0.14),\n    0px 2px 1px -1px rgba(237, 70, 47, 0.12);\nborder-radius: 30px 30px 30px 30px / 25px 25px 25px 25px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n`;\n\nexport const MovieImg = styled.img`\n  width: 186.66px;\n  height: 280px;\n  object-fit: contain;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nexport const MovieName = styled.h3`\n  width: 172px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-size: 16px;\n  line-height: 26px;\n`;\n\nexport const MovieRelease = styled.span`\n  font-size: 16px;\n  text-align: center;\n`;\n\nexport const MovieRating = styled.span`\n  font-size: 16px;\n  text-align: center;\n`;\n\nexport const VoteNum = styled.div`\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  InfoWrapper,\n  MovieName,\n  MovieRelease,\n  MovieRating,\n  VoteNum,\n} from './MovieCard.styled';\nimport defaultPoster from '../../images/noPoster.png';\n\nexport default function MovieCard({\n  id,\n  poster_path,\n  release_date,\n  title,\n  vote_average,\n}) {\n  const location = useLocation();\n\n  const releaseDate = new Date(release_date);\n\n  return (\n    <MovieItem id={id}>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <MovieImg\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n        />\n        <InfoWrapper>\n          <MovieName>\n            {title}\n          </MovieName>\n          <MovieRelease>\n            Release date:\n            <br />\n            {release_date !== 0 ? releaseDate.toLocaleDateString() : 'unknown'}\n          </MovieRelease>\n          <MovieRating>\n            IMDb Rating:\n            <VoteNum>{vote_average !== 0 ? vote_average : 'unrated'}</VoteNum>\n          </MovieRating>\n        </InfoWrapper>\n      </MovieLink>\n    </MovieItem>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { MoviesList } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ moviesSet }) {\n  return (\n    <MoviesList>\n      {moviesSet.map(({ id, ...props }) => (\n        <MovieCard key={id} id={id} {...props} />\n      ))}\n    </MoviesList>\n  );\n}\n\nMoviesGallery.propTypes = {\n  moviesSet: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  padding: 30px 0;\n  line-height: 58px;\n  letter-spacing: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 56px;\n  color: #2a2a2a;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.slyled';\n\nexport default function PageHeading({ text }) {\n  return <PageTitle>{text}</PageTitle>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/moviesApi';\nimport PageHeading from 'components/PageHeading';\nimport MoviesGallery from 'components/MoviesGallery';\nimport { TextWrapper, NoMovieText } from './HomePageView.styled';\n\nexport default function HomePageView() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(response => setMovies(response.data.results));\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Trending today\" />\n      {movies && <MoviesGallery moviesSet={movies} />}\n      {movies && movies.length === 0 && (\n        <TextWrapper>\n          <NoMovieText>\n            All filmmakers are on holiday. <br /> There are no trending movies\n            for now.\n          </NoMovieText>\n        </TextWrapper>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const TextWrapper = styled.div`\n  min-width: 480px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const NoMovieText = styled.p`\n  font-size: 32px;\n  letter-spacing: 3px;\n  text-align: center;\n  color: #ed462f;\n`;\n"],"names":["MovieItem","styled","MovieLink","Link","MovieImg","InfoWrapper","MovieName","MovieRelease","MovieRating","VoteNum","MovieCard","id","poster_path","release_date","title","vote_average","location","useLocation","releaseDate","Date","to","state","from","src","defaultPoster","alt","toLocaleDateString","MoviesList","MoviesGallery","moviesSet","map","props","PageTitle","PageHeading","text","HomePageView","useState","movies","setMovies","useEffect","fetchTrendingMovies","then","response","data","results","length","TextWrapper","NoMovieText"],"sourceRoot":""}