{"version":3,"file":"static/js/749.1e0cb149.chunk.js","mappings":"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","sources":["components/PageHeading/PageHeading.slyled.jsx","components/PageHeading/PageHeading.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","views/MovieDetailsPageView/MovieDetailsPageView.jsx","views/MovieDetailsPageView/MovieDetailsPageView.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  padding: 30px 0;\n  line-height: 58px;\n  letter-spacing: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 56px;\n  color: #2a2a2a;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.slyled';\n\nexport default function PageHeading({ text }) {\n  return <PageTitle>{text}</PageTitle>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 300px;\n  padding: 20px;\n`;\n\nexport const InfoWrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ReleaseStatus = styled.p`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieRelease = styled.p`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n`;\n\nexport const MovieRating = styled.p`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n`;\n\nexport const VoteNum = styled.span`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n  font-weight: 600;\n`;\n\nexport const GenresName = styled.p`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n`;\n\nexport const GenresList = styled.ul`\n  margin-bottom: 5px;\n`;\n\nexport const GenresItem = styled.li`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-left: 15px;\n`;\n\nexport const MovieOverview = styled.p`\n  font-size: 18px;\n  margin-top: 30px;\n`;\n\nexport const MovieHomepage = styled.a`\n  font-size: 20px;\n  letter-spacing: 1px;\n  margin-top: 30px;\n  color: #0077ee;\n\n  &:hover {\n    color: #1e90ff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieWrapper,\n  MoviePoster,\n  InfoWrapper,\n  ReleaseStatus,\n  MovieRelease,\n  MovieRating,\n  VoteNum,\n  GenresName,\n  GenresList,\n  GenresItem,\n  MovieOverview,\n  MovieHomepage,\n} from './MovieDetails.styled';\nimport defaultPoster from '../../images/noPoster.png';\n\nexport default function MovieDetails({ movieData }) {\n  const {\n    poster_path,\n    genres,\n    homepage,\n    overview,\n    release_date,\n    status,\n    title,\n    vote_average,\n  } = movieData;\n\n  const releaseDate = new Date(release_date);\n\n  return (\n    <MovieWrapper>\n      <MoviePoster\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : defaultPoster\n        }\n        alt={title}\n      />\n      <InfoWrapper>\n        <ReleaseStatus>Status: {status}</ReleaseStatus>\n        <MovieRelease>\n          Release date:{' '}\n          {release_date !== 0 ? releaseDate.toLocaleDateString() : 'unknown'}\n        </MovieRelease>\n        <MovieRating>\n          IMDb Rating:{' '}\n          <VoteNum>{vote_average !== 0 ? vote_average : 'unrated'}</VoteNum>\n        </MovieRating>\n        {genres.length > 0 && (\n          <>\n            <GenresName>Genres: </GenresName>\n            <GenresList>\n              {genres.map(({ id, name }) => (\n                <GenresItem key={id}>{name}</GenresItem>\n              ))}\n            </GenresList>\n          </>\n        )}\n        {overview ? (\n          <MovieOverview>{overview}</MovieOverview>\n        ) : (\n          <MovieOverview>Overview is absent.</MovieOverview>\n        )}\n        <MovieOverview>{overview}</MovieOverview>\n        {homepage && (\n          <MovieHomepage href={homepage} target=\"_blank\">\n            {homepage}\n          </MovieHomepage>\n        )}\n      </InfoWrapper>\n    </MovieWrapper>\n  );\n}\n\nMovieDetails.propTypes = {\n  movieData: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/moviesApi';\nimport PageHeading from 'components/PageHeading';\nimport ButtonLink from 'components/ButtonLink';\nimport MovieDetails from 'components/MovieDetails';\nimport {\n  MovieDetailsWrapper,\n  BtnWrapper,\n} from './MovieDetailsPageView.styled';\n\nexport default function MovieDetailsPageView() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(response => setMovie(response.data))\n      .catch(() => navigate('*'));\n  }, [movieId, navigate]);\n\n  const fromPage = location.state?.from ?? '/';\n\n  const { title } = movie;\n\n  const isEmpty = Object.keys(movie).length === 0;\n\n  return (\n    <>\n      {!isEmpty && (\n        <>\n          <PageHeading text={title} />\n          <ButtonLink to={fromPage} text=\"Go Back\" />\n          <MovieDetailsWrapper>\n            <MovieDetails movieData={movie} />\n            <BtnWrapper>\n              <ButtonLink to=\"cast\" text=\"Cast\" state={{ from: fromPage }} />\n              <ButtonLink\n                to=\"reviews\"\n                text=\"Reviews\"\n                state={{ from: fromPage }}\n              />\n            </BtnWrapper>\n            <Outlet />\n          </MovieDetailsWrapper>\n        </>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsWrapper = styled.div`\n  margin-top: 20px;\n  color: #ffffff;\n  background: rgb(131,58,180);\n  background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);\n  box-shadow: 0px 1px 3px 0px rgba(237, 70, 47, 0.2),\n    0px 1px 1px 0px rgba(237, 70, 47, 0.14),\n    0px 2px 1px -1px rgba(237, 70, 47, 0.12);\n    border-radius: 30px 30px 30px 30px / 25px 25px 25px 25px;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  padding: 20px;\n  margin: 0 auto;\n  width: 300px;\n`;\n"],"names":["PageTitle","styled","PageHeading","text","MovieWrapper","MoviePoster","InfoWrapper","ReleaseStatus","MovieRelease","MovieRating","VoteNum","GenresName","GenresList","GenresItem","MovieOverview","MovieHomepage","MovieDetails","movieData","poster_path","genres","homepage","overview","release_date","status","title","vote_average","releaseDate","Date","src","defaultPoster","alt","toLocaleDateString","length","map","id","name","href","target","MovieDetailsPageView","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","fetchMovieDetails","then","response","data","catch","fromPage","state","from","isEmpty","Object","keys","ButtonLink","to","MovieDetailsWrapper","BtnWrapper"],"sourceRoot":""}