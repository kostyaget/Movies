{"version":3,"file":"static/js/774.fc58de5c.chunk.js","mappings":"+PAGaA,EAAYC,EAAAA,EAAAA,GAAH,mdAeTC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,0CAITG,EAAWH,EAAAA,EAAAA,IAAH,sFAMRI,EAAcJ,EAAAA,EAAAA,IAAH,wHAOXK,EAAYL,EAAAA,EAAAA,GAAH,yIAQTM,EAAeN,EAAAA,EAAAA,KAAH,mEAKZO,EAAcP,EAAAA,EAAAA,KAAH,mEAKXQ,EAAUR,EAAAA,EAAAA,IAAH,6C,mBCvCL,SAASS,EAAT,GAMX,IALFC,EAKC,EALDA,GACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,MACAC,EACC,EADDA,aAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,IAAIC,KAAKN,GAE7B,OACE,SAACb,EAAD,CAAWW,GAAIA,EAAf,UACE,UAACT,EAAD,CAAWkB,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMN,GAA/C,WACE,SAACZ,EAAD,CACEmB,IACEX,EAAW,yCAC2BA,GAClCY,EAENC,IAAKX,KAEP,UAACT,EAAD,YACE,SAACC,EAAD,UACGQ,KAEH,UAACP,EAAD,4BAEE,kBACkB,IAAjBM,EAAqBK,EAAYQ,qBAAuB,cAE3D,UAAClB,EAAD,2BAEE,SAACC,EAAD,UAA2B,IAAjBM,EAAqBA,EAAe,uBC7CnD,IAAMY,EAAa1B,EAAAA,EAAAA,GAAH,wR,SCER,SAAS2B,EAAT,GAAuC,IAAdC,EAAa,EAAbA,UACtC,OACE,SAACF,EAAD,UACGE,EAAUC,KAAI,gBAAGnB,EAAH,EAAGA,GAAOoB,GAAV,mBACb,SAACrB,GAAD,QAAoBC,GAAIA,GAAQoB,GAAhBpB,U,oECNXqB,E,QAAY/B,EAAAA,GAAH,qL,SCCP,SAASgC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,SAACF,EAAD,UAAYE,M,mLCFRC,EAAYlC,EAAAA,EAAAA,KAAH,mRAaTmC,EAAiBnC,EAAAA,EAAAA,MAAH,4PAgBdoC,EAAepC,EAAAA,EAAAA,OAAH,qRAgBZqC,EAAoBrC,EAAAA,EAAAA,KAAH,6M,SCpCf,SAASsC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OACE,UAACR,EAAD,CAAWK,SAPI,SAAAI,GACfA,EAAIC,iBACJL,EAASE,EAAYI,QAVrBH,EAAe,KAef,WACE,SAACP,EAAD,CACEW,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOV,EACPW,SApBgB,SAAAT,GACpB,IAAMU,EAAsBV,EAAIW,cAAcH,MAAMI,cACpDb,EAAeW,OAoBb,UAACjB,EAAD,CAAcU,KAAK,SAAS,aAAW,gBAAvC,WACE,SAAC,cAAD,CAAsBK,MAAO,CAAEK,KAAM,SAArC,UACE,SAAC,MAAD,OAEF,SAACnB,EAAD,2B,kCC7BO,SAASoB,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCpB,EAAAA,EAAAA,UAASmB,EAAaE,IAAI,UAAhE,eAAOpB,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAkCvB,EAAAA,EAAAA,WAAS,GAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACMC,EClBO,SAAqBf,GAClC,IAAMgB,GAAMC,EAAAA,EAAAA,UAIZ,OAHAC,EAAAA,EAAAA,YAAU,WACRF,EAAIG,QAAUnB,KAETgB,EAAIG,QDaaC,CAAY9B,IAEpC4B,EAAAA,EAAAA,YAAU,WACH5B,IAILwB,GAAa,IAEbO,EAAAA,EAAAA,IAAiB/B,GACdgC,MAAK,SAAAC,GACJ,IEXwBC,EFWxB,EAAmCD,EAASE,KAApCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,cAEjB,GAAsB,IAAlBA,EAGF,OEVwB,SAAArC,IAChCsC,EAAAA,EAAAA,IAAM,oDAAD,OACiDtC,EADjD,2CAEH,CACEuC,KAAM,mCFIFC,CAA0BxC,QAC1ByC,IEfsBP,EFmBAG,GElB9BC,EAAAA,EAAAA,IAAM,oBAAD,OAAqBJ,EAArB,oBAAqD,CACxDK,KAAM,iBFkBFjB,EAAUc,MAEXM,OAAM,SAAAC,GACL,OERsB,SAAAA,IAC5BL,EAAAA,EAAAA,IAAM,mCAAD,OAAoCK,EAAMC,QAA1C,KAAsD,CACzDL,KAAM,iBFMKC,CAAsBG,MAE9BE,SAAQ,WACPrB,GAAa,SAEhB,CAACxB,IAEJ,IAAMyC,EAAc,WAClBnB,EAAU,KAmBZ,OACE,iCACE,SAAC/B,EAAA,EAAD,CAAaC,KAAK,YAClB,SAACK,EAAD,CAAYC,SAnBK,SAAAE,GACC,KAAhBA,EAKAyB,IAAoBzB,GAKxBmB,EAAgB,CAAE2B,MAAO9C,IACzBC,EAAeD,GACfyC,KExDiC,SAAAzC,IACnCsC,EAAAA,EAAAA,IAAM,uDAAD,OACoDtC,EADpD,MAEH,CACEuC,KAAM,mCF8CNC,CAA6BxC,IE1DjCsC,EAAAA,EAAAA,IACE,0FACA,CACEC,KAAM,sCFoELlB,EAAO0B,OAAS,GACf,SAAC7D,EAAA,EAAD,CAAeC,UAAWkC,IACvBE,GAOH,SAAC,EAAAyB,cAAD,WACE,SAACC,EAAA,EAAD,OAPF,SAAC,EAAAC,YAAD,WACE,SAAC,EAAAC,YAAD,sF,uKG5EGH,EAAgBzF,EAAAA,EAAAA,IAAH,uHAQb2F,EAAc3F,EAAAA,EAAAA,IAAH,uEAKX4F,EAAc5F,EAAAA,EAAAA,EAAH,+G","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/PageHeading/PageHeading.slyled.jsx","components/PageHeading/PageHeading.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","views/MoviesPageView/MoviesPageView.jsx","hooks/usePrevious.jsx","utils/notifications.jsx","views/MoviesPageView/MoviesPageView.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  overflow: hidden;\n  color: #ffffff;\n  background: rgb(131,58,180);\n  background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);\n    0px 1px 1px 0px rgba(237, 70, 47, 0.14),\n    0px 2px 1px -1px rgba(237, 70, 47, 0.12);\nborder-radius: 30px 30px 30px 30px / 25px 25px 25px 25px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n`;\n\nexport const MovieImg = styled.img`\n  width: 186.66px;\n  height: 280px;\n  object-fit: contain;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nexport const MovieName = styled.h3`\n  width: 172px;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-size: 16px;\n  line-height: 26px;\n`;\n\nexport const MovieRelease = styled.span`\n  font-size: 16px;\n  text-align: center;\n`;\n\nexport const MovieRating = styled.span`\n  font-size: 16px;\n  text-align: center;\n`;\n\nexport const VoteNum = styled.div`\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  InfoWrapper,\n  MovieName,\n  MovieRelease,\n  MovieRating,\n  VoteNum,\n} from './MovieCard.styled';\nimport defaultPoster from '../../images/noPoster.png';\n\nexport default function MovieCard({\n  id,\n  poster_path,\n  release_date,\n  title,\n  vote_average,\n}) {\n  const location = useLocation();\n\n  const releaseDate = new Date(release_date);\n\n  return (\n    <MovieItem id={id}>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <MovieImg\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n        />\n        <InfoWrapper>\n          <MovieName>\n            {title}\n          </MovieName>\n          <MovieRelease>\n            Release date:\n            <br />\n            {release_date !== 0 ? releaseDate.toLocaleDateString() : 'unknown'}\n          </MovieRelease>\n          <MovieRating>\n            IMDb Rating:\n            <VoteNum>{vote_average !== 0 ? vote_average : 'unrated'}</VoteNum>\n          </MovieRating>\n        </InfoWrapper>\n      </MovieLink>\n    </MovieItem>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard';\nimport { MoviesList } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ moviesSet }) {\n  return (\n    <MoviesList>\n      {moviesSet.map(({ id, ...props }) => (\n        <MovieCard key={id} id={id} {...props} />\n      ))}\n    </MoviesList>\n  );\n}\n\nMoviesGallery.propTypes = {\n  moviesSet: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h1`\n  padding: 30px 0;\n  line-height: 58px;\n  letter-spacing: 10px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 56px;\n  color: #2a2a2a;\n`;\n","import PropTypes from 'prop-types';\nimport { PageTitle } from './PageHeading.slyled';\n\nexport default function PageHeading({ text }) {\n  return <PageTitle>{text}</PageTitle>;\n}\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const QueryForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin: 10px auto 30px auto;\n  width: 100%;\n  max-width: 600px;\n  background-color: #ggggg;\n  border-radius: 1px;\n  overflow: hidden;\n  border: 1px solid #b3b1b1;\n  box-shadow: 0 8px 6px -6px black;\n`;\n\nexport const QueryFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const QueryFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  background-color: #b3b1b1;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const QueryFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconContext } from 'react-icons';\nimport { MdSearch } from 'react-icons/md';\nimport {\n  QueryForm,\n  QueryFormInput,\n  QueryFormBtn,\n  QueryFormBtnLabel,\n} from './SearchForm.styled';\n\nexport default function SearchForm({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const formReset = () => {\n    setSearchQuery('');\n  };\n\n  const onInputChange = evt => {\n    const normalizeInputValue = evt.currentTarget.value.toLowerCase();\n    setSearchQuery(normalizeInputValue);\n  };\n\n  const onSearch = evt => {\n    evt.preventDefault();\n    onSubmit(searchQuery.trim());\n    formReset();\n  };\n\n  return (\n    <QueryForm onSubmit={onSearch}>\n      <QueryFormInput\n        type=\"text\"\n        name=\"search\"\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={searchQuery}\n        onChange={onInputChange}\n      />\n      <QueryFormBtn type=\"submit\" aria-label=\"Search movies\">\n        <IconContext.Provider value={{ size: '2.5em' }}>\n          <MdSearch />\n        </IconContext.Provider>\n        <QueryFormBtnLabel>Search</QueryFormBtnLabel>\n      </QueryFormBtn>\n    </QueryForm>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport usePrevious from 'hooks/usePrevious';\nimport { fetchSearchMovie } from 'services/moviesApi';\nimport * as notify from 'utils/notifications';\nimport PageHeading from 'components/PageHeading';\nimport SearchForm from 'components/SearchForm';\nimport MoviesGallery from 'components/MoviesGallery';\nimport Loader from 'components/Loader';\nimport {\n  LoaderWrapper,\n  TextWrapper,\n  WelcomeText,\n} from './MoviesPageView.styled';\n\nexport default function MoviesPageView() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query'));\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const prevSearchQuery = usePrevious(searchQuery);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchSearchMovie(searchQuery)\n      .then(response => {\n        const { results, total_results } = response.data;\n\n        if (total_results === 0) {\n          notify.showIncorrectQuery(searchQuery);\n          moviesReset();\n          return;\n        }\n\n        notify.showSearchResult(total_results);\n        setMovies(results);\n      })\n      .catch(error => {\n        return notify.showQueryError(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [searchQuery]);\n\n  const moviesReset = () => {\n    setMovies([]);\n  };\n\n  const onFormSubmit = searchQuery => {\n    if (searchQuery === '') {\n      notify.showSearchQueryAbsence();\n      return;\n    }\n\n    if (prevSearchQuery === searchQuery) {\n      notify.showSearchQueryRepeat(searchQuery);\n      return;\n    }\n\n    setSearchParams({ query: searchQuery });\n    setSearchQuery(searchQuery);\n    moviesReset();\n  };\n\n  return (\n    <>\n      <PageHeading text=\"Movies\" />\n      <SearchForm onSubmit={onFormSubmit} />\n      {movies.length > 0 ? (\n        <MoviesGallery moviesSet={movies} />\n      ) : !isLoading ? (\n        <TextWrapper>\n          <WelcomeText>\n            All filmmakers are waiting for your search query to show movies.\n          </WelcomeText>\n        </TextWrapper>\n      ) : (\n        <LoaderWrapper>\n          <Loader />\n        </LoaderWrapper>\n      )}\n    </>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import toast from 'react-hot-toast';\n\nexport const showSearchQueryAbsence = () => {\n  toast(\n    'No, no, no! God, no! To search for movies you need to specify what you are looking for.',\n    {\n      icon: '🤦‍♂️',\n    }\n  );\n};\n\nexport const showSearchQueryRepeat = searchQuery => {\n  toast(\n    `Bro, you already found all the movies on the query \"${searchQuery}\".`,\n    {\n      icon: '🙅‍♂️',\n    }\n  );\n};\n\nexport const showSearchResult = totalResults => {\n  toast(`Hooray! We found ${totalResults} movies for you.`, {\n    icon: '🤟',\n  });\n};\n\nexport const showIncorrectQuery = searchQuery => {\n  toast(\n    `Sorry, there are no movies matching your query: \"${searchQuery}\". Please try to search something else.`,\n    {\n      icon: '🤷‍♂️',\n    }\n  );\n};\n\nexport const showQueryError = error => {\n  toast(`You caught the following error: ${error.message}.`, {\n    icon: '🐷',\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: relative;\n  width: 160px;\n  height: 160px;\n  margin: 0 auto;\n  padding: 50px;\n`;\n\nexport const TextWrapper = styled.div`\n  width: 720px;\n  margin: 100px auto 0 auto;\n`;\n\nexport const WelcomeText = styled.p`\n  font-size: 42px;\n  letter-spacing: 3px;\n  text-align: center;\n  color: #2a2a2a;\n`;\n"],"names":["MovieItem","styled","MovieLink","Link","MovieImg","InfoWrapper","MovieName","MovieRelease","MovieRating","VoteNum","MovieCard","id","poster_path","release_date","title","vote_average","location","useLocation","releaseDate","Date","to","state","from","src","defaultPoster","alt","toLocaleDateString","MoviesList","MoviesGallery","moviesSet","map","props","PageTitle","PageHeading","text","QueryForm","QueryFormInput","QueryFormBtn","QueryFormBtnLabel","SearchForm","onSubmit","useState","searchQuery","setSearchQuery","evt","preventDefault","trim","type","name","autocomplete","autoFocus","placeholder","value","onChange","normalizeInputValue","currentTarget","toLowerCase","size","MoviesPageView","useSearchParams","searchParams","setSearchParams","get","movies","setMovies","isLoading","setIsLoading","prevSearchQuery","ref","useRef","useEffect","current","usePrevious","fetchSearchMovie","then","response","totalResults","data","results","total_results","toast","icon","notify","moviesReset","catch","error","message","finally","query","length","LoaderWrapper","Loader","TextWrapper","WelcomeText"],"sourceRoot":""}